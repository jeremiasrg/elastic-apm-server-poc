version: "3"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      discovery.type: single-node
      ELASTIC_USERNAME: elastic
      ELASTIC_PASSWORD: elastic
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    container_name: kibana
    ports:
      - 5601:5601
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - elastic

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.9.2
    container_name: apm-server
    ports:
      - 8200:8200
    depends_on:
     - elasticsearch
     - kibana
    environment:
      user: apm-server
    volumes:
      - "./apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:ro"
    # entrypoint: "apm-server -e -strict.perms=false"
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana01:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    command: apm-server -e -strict.perms=false
    networks:
      - elastic

  flask-pony-db:
    container_name: flask-pony-db
    image: mysql:5.7.22
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: Test123
      MYSQL_USER: docker
      MYSQL_PASSWORD: Test123
      MYSQL_DATABASE: soccer_teams
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3306
    ports:
      - 3306:3306
    expose:
      - 3306
    networks:
      - elastic
    depends_on:
     - elasticsearch
     - kibana

  flask-pony-api:
    image: jeremiasrg/flask-api-ponyorm
    container_name: flask-pony-api
    restart: always
    ports:
      - 5000:5000
    environment:
      SERVER_URL: http://apm-server:8200
      APP_NAME: flask-pony-apm-client
      SERVICE_NAME: Flask-pony-APM-Test
      DB_HOST: flask-pony-db
      DB_USER: docker
      DB_PASS: Test123
    networks:
      - elastic
    depends_on:
     - elasticsearch
     - kibana
     - flask-pony-db

networks:
  elastic:
    driver: bridge
